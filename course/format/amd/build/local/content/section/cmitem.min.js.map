{"version":3,"file":"cmitem.min.js","sources":["../../../../src/local/content/section/cmitem.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Course course module item component.\r\n *\r\n * This component is used to control specific course modules interactions like drag and drop.\r\n *\r\n * @module     core_courseformat/local/content/section/cmitem\r\n * @class      core_courseformat/local/content/section/cmitem\r\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport DndCmItem from 'core_courseformat/local/courseeditor/dndcmitem';\r\n\r\nexport default class extends DndCmItem {\r\n\r\n    /**\r\n     * Constructor hook.\r\n     */\r\n    create() {\r\n        // Optional component name for debugging.\r\n        this.name = 'content_section_cmitem';\r\n        // Default query selectors.\r\n        this.selectors = {\r\n            DRAGICON: `.editing_move`,\r\n        };\r\n        // Most classes will be loaded later by DndCmItem.\r\n        this.classes = {\r\n            LOCKED: 'editinprogress',\r\n        };\r\n        // We need our id to watch specific events.\r\n        this.id = this.element.dataset.id;\r\n    }\r\n\r\n    /**\r\n     * Initial state ready method.\r\n     */\r\n    stateReady() {\r\n        this.configDragDrop(this.id);\r\n        this.getElement(this.selectors.DRAGICON)?.classList.add(this.classes.DRAGICON);\r\n    }\r\n\r\n    /**\r\n     * Component watchers.\r\n     *\r\n     * @returns {Array} of watchers\r\n     */\r\n    getWatchers() {\r\n        return [\r\n            {watch: `cm[${this.id}]:deleted`, handler: this.unregister},\r\n            {watch: `cm[${this.id}]:updated`, handler: this._refreshCm},\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Update a course index cm using the state information.\r\n     *\r\n     * @param {object} param\r\n     * @param {Object} param.element details the update details.\r\n     */\r\n    _refreshCm({element}) {\r\n        // Update classes.\r\n        this.element.classList.toggle(this.classes.DRAGGING, element.dragging ?? false);\r\n        this.element.classList.toggle(this.classes.LOCKED, element.locked ?? false);\r\n        this.locked = element.locked;\r\n    }\r\n}\r\n"],"names":["DndCmItem","create","name","selectors","DRAGICON","classes","LOCKED","id","this","element","dataset","stateReady","configDragDrop","getElement","classList","add","getWatchers","watch","handler","unregister","_refreshCm","toggle","DRAGGING","dragging","locked"],"mappings":";;;;;;;;;;0KA4B6BA,mBAKzBC,cAESC,KAAO,8BAEPC,UAAY,CACbC,+BAGCC,QAAU,CACXC,OAAQ,uBAGPC,GAAKC,KAAKC,QAAQC,QAAQH,GAMnCI,uCACSC,eAAeJ,KAAKD,kCACpBM,WAAWL,KAAKL,UAAUC,wDAAWU,UAAUC,IAAIP,KAAKH,QAAQD,UAQzEY,oBACW,CACH,CAACC,mBAAaT,KAAKD,gBAAeW,QAASV,KAAKW,YAChD,CAACF,mBAAaT,KAAKD,gBAAeW,QAASV,KAAKY,aAUxDA,2DAAWX,QAACA,mBAEHA,QAAQK,UAAUO,OAAOb,KAAKH,QAAQiB,mCAAUb,QAAQc,+DACxDd,QAAQK,UAAUO,OAAOb,KAAKH,QAAQC,+BAAQG,QAAQe,yDACtDA,OAASf,QAAQe"}